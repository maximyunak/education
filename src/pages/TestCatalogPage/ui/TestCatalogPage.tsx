import { Modal, styled } from '@mui/material';
import { Container } from 'app/layout';
import { SearchFilter } from 'features/SearchFilter';
import { StyledButton, Title, useAppSelector } from 'shared/lib';

import { MoreButton, Section, TestsContainer } from './TestCatalog.styles';
import { TestPreview } from 'widgets/TestPreview';
import { TestPreviewType } from 'entities/TestPreview/model/TestPreviewType';
import { CreateTestModal } from 'features/CreateTest';
import React, { useState } from 'react';
import { fetchTest, tests } from 'entities/Tests';
import { useGetTestsQuery } from 'entities/Tests/api/testsApi';

// const tests: TestPreviewType[] = [
//   {
//     id: 1,
//     category: '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞',
//     time: 30,
//     questions: 20,
//     title:
//       '–¢–µ—Å—Ç –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –±–∞–∑–æ–≤—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ JavaScript, –≤–∫–ª—é—á–∞—è –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ, —Ç–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö, —Ñ—É–Ω–∫—Ü–∏–∏ –∏ —Ü–∏–∫–ª—ã.',
//     author: '–ò–≤–∞–Ω –ò–≤–∞–Ω–æ–≤',
//   },
//   {
//     id: 2,
//     category: '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞',
//     time: 45,
//     questions: 25,
//     title:
//       '–≠—Ç–æ—Ç —Ç–µ—Å—Ç –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è —Ç–µ—Ö, –∫—Ç–æ —É–∂–µ –∑–Ω–∞–∫–æ–º —Å –æ—Å–Ω–æ–≤–∞–º–∏ JavaScript –∏ —Ö–æ—á–µ—Ç —É–≥–ª—É–±–∏—Ç—å —Å–≤–æ–∏ –∑–Ω–∞–Ω–∏—è –≤ –∑–∞–º—ã–∫–∞–Ω–∏—è—Ö, –ø—Ä–æ–º–∏—Å–∞—Ö –∏ –∞—Å–∏–Ω—Ö—Ä–æ–Ω–Ω–æ—Å—Ç–∏.',
//     author: '–ê–ª–µ–∫—Å–µ–π –ü–µ—Ç—Ä–æ–≤',
//   },
//   {
//     id: 3,
//     category: '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞',
//     time: 60,
//     questions: 30,
//     title: '–¢–µ—Å—Ç –ø–æ –æ—Å–Ω–æ–≤–∞–º –±–∏–±–ª–∏–æ—Ç–µ–∫–∏ React, –≤–∫–ª—é—á–∞—è JSX, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ã, —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∏ –ø—Ä–æ–ø—Å—ã.',
//     author: '–ú–∞—Ä–∏—è –°–∏–¥–æ—Ä–æ–≤–∞',
//   },
//   {
//     id: 4,
//     category: '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞',
//     time: 50,
//     questions: 22,
//     title:
//       '–¢–µ—Å—Ç –ø–æ –æ—Å–Ω–æ–≤–∞–º —Å–æ–∑–¥–∞–Ω–∏—è —Å–µ—Ä–≤–µ—Ä–Ω—ã—Ö –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º Node.js –∏ —Ñ—Ä–µ–π–º–≤–æ—Ä–∫–∞ Express.',
//     author: '–î–º–∏—Ç—Ä–∏–π –ö—É–∑–Ω–µ—Ü–æ–≤',
//   },
//   {
//     id: 5,
//     category: '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞',
//     time: 40,
//     questions: 18,
//     title: '–¢–µ—Å—Ç –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∏ —è–∑—ã–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ SQL.',
//     author: '–û–ª—å–≥–∞ –í–∞—Å–∏–ª—å–µ–≤–∞',
//   },
//   {
//     id: 6,
//     category: '–ü–µ–¥–∞–≥–æ–≥–∏–∫–∞',
//     time: 40,
//     questions: 18,
//     title: '–¢–µ—Å—Ç –æ—Ö–≤–∞—Ç—ã–≤–∞–µ—Ç –æ—Å–Ω–æ–≤–Ω—ã–µ –∫–æ–Ω—Ü–µ–ø—Ü–∏–∏ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö –∏ —è–∑—ã–∫ –∑–∞–ø—Ä–æ—Å–æ–≤ SQL.',
//     author: '–û–ª—å–≥–∞ –í–∞—Å–∏–ª—å–µ–≤–∞',
//   },
// ];

export const TestCatalogPage = () => {
  const data = useAppSelector((state) => state.SearchFilter);

  const [open, setOpen] = useState(false);
  const [limit, setLimit] = React.useState(10);
  const [page, setPage] = React.useState(1);
  const { testsData, isLoading, error } = useGetTestsQuery({
    limit,
    page,
  });
  console.log('üöÄ ~ TestCatalogPage ~ isLoading:', isLoading);
  console.log('üöÄ ~ TestCatalogPage ~ error:', error);
  console.log('üöÄ ~ TestCatalogPage ~ testsData:', testsData);

  // const fetchTests = async () => {
  //   const items = await fetchTest({
  //     limit,
  //     page,
  //   });
  //   return items;
  // };

  // const items = fetchTests();

  return (
    <div>
      <Section>
        <Container>
          <Title>–ö–∞—Ç–∞–ª–æ–≥ —Ç–µ—Å—Ç–æ–≤</Title>
          <SearchFilter />
          {
            <TestsContainer>
              {/* {tests.items.map((el, id) => (
                <TestPreview key={`${el.id}__${id}`} {...el} />
              ))} */}
              {/* {tests.items ? tests.items.map((el) => <>{el.title}</>) : <div>loading...</div>} */}
            </TestsContainer>
          }
        </Container>
      </Section>
      <Modal open={open} onClose={() => setOpen(false)}>
        <CreateTestModal onClick={() => setOpen(false)} />
      </Modal>
      <Container>
        <MoreButton>
          <StyledButton maxWidth="180px">–ó–∞–≥—Ä—É–∑–∏—Ç—å –µ—â–µ 10</StyledButton>
          <StyledButton maxWidth="180px" onClick={() => setOpen(true)}>
            –°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç
          </StyledButton>
        </MoreButton>
      </Container>
    </div>
  );
};
